{"version":3,"sources":["player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","type","AudioClip","onLoad","jumpCount","console","log","node","y","accLeft","accRight","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","start","update","dt","Math","abs","x","onDestroy","off","setJumpAction","jumpAction","stopAction","jumpUp","moveBy","v2","easing","easeCubicActionOut","callback","callFunc","jumpDownAction","sequence","runAction","jumpDownHeight","jumpDownTime","jumpDown","easeCubicActionIn","playJumpSound","jumpDownEnd","audioEngine","playEffect","event","keyCode","macro","KEY","a","d","s"],"mappings":"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","file":"player.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 主角跳跃高度\n        jumpHeight: 0,\n        // 主角跳跃持续时间\n        jumpDuration: 0,\n        // 最大移动速度\n        maxMoveSpeed: 0,\n        // 加速度\n        accel: 0,\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        // 跳跃音效资源\n        jumpAudio: {\n            default: null,\n            type: cc.AudioClip\n        },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        // 初始化跳跃动作\n        // this.jumpAction = this.setJumpAction();\n        // this.node.runAction(this.jumpAction);\n        this.jumpCount = 0\n        console.log(this.node.y)\n\n        // 加速度方向开关\n        this.accLeft = false;\n        this.accRight = false;\n        // 主角当前水平方向速度\n        this.xSpeed = 0;\n\n        // 初始化键盘输入监听\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);  \n    },\n\n    start () {\n\n    },\n\n    update (dt) {\n        // 根据当前加速度方向每帧更新速度\n        if (this.accLeft) {\n            this.xSpeed -= this.accel * dt;\n        } else if (this.accRight) {\n            this.xSpeed += this.accel * dt;\n        }\n        // 限制主角的速度不能超过最大值\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\n            // if speed reach limit, use max speed with current direction\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\n        }\n\n        // 根据当前速度更新主角的位置\n        this.node.x += this.xSpeed * dt;\n    },\n\n    onDestroy () {\n        // 取消键盘输入监听\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    setJumpAction: function () {\n        // 控制二段跳\n        if (this.jumpCount >= 2) {\n            return \n        }\n\n        // 二段跳中止前一个动作\n        if (this.jumpAction) {\n            this.node.stopAction(this.jumpAction);\n        }\n\n        // 跳跃上升\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\n        \n        \n        // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\n        var callback = cc.callFunc(this.jumpDownAction, this);\n        \n        // 不断重复\n        // return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\n        \n        this.jumpCount += 1\n        this.jumpAction = cc.sequence(jumpUp, callback)\n        this.node.runAction(this.jumpAction);\n    },\n    jumpDownAction: function () {\n        // 下落\n        var jumpDownHeight = this.node.y + 120\n        var jumpDownTime = jumpDownHeight/this.jumpHeight * this.jumpDuration\n        var jumpDown = cc.moveBy(jumpDownTime, cc.v2(0, -jumpDownHeight)).easing(cc.easeCubicActionIn());\n        \n        this.playJumpSound()\n        var callback = cc.callFunc(this.jumpDownEnd, this);\n        this.jumpAction = cc.sequence(jumpDown, callback)\n        this.node.runAction(this.jumpAction);\n    },\n    playJumpSound: function () {\n        // 调用声音引擎播放声音\n        cc.audioEngine.playEffect(this.jumpAudio, false);\n    },\n    jumpDownEnd: function () {\n        this.jumpCount = 0\n        this.jumpAction = null\n    },\n    onKeyDown (event) {\n        // set a flag when key pressed\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.accLeft = true;\n                break;\n            case cc.macro.KEY.d:\n                this.accRight = true;\n                break;\n            case cc.macro.KEY.s:\n                this.setJumpAction()\n                break;\n        }\n    },\n\n    onKeyUp (event) {\n        // unset a flag when key released\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.accLeft = false;\n                break;\n            case cc.macro.KEY.d:\n                this.accRight = false;\n                break;\n        }\n    },\n});\n"]}