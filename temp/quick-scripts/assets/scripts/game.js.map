{"version":3,"sources":["game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","obstaclePrefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","scoreAudio","AudioClip","bg1","bg2","curBg","gd1","gd2","curGd","bgSpeed","onLoad","getComponent","game","groundY","y","height","timer","starDuration","spawnNewStar","score","spawnNewObstacle","node","getChildByName","on","EventType","TOUCH_END","onTouchEndCallback","start","update","dt","s","x","newStar","instantiate","setPosition","getNewStarPosition","addChild","Math","random","randX","randY","jumpHeight","width","v2","newObstacle","getNewObstaclePosition","gainScore","string","audioEngine","playEffect","gameOver","stopAllActions","director","loadScene","setJumpAction"],"mappings":"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","file":"game.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 这个属性引用了星星预制资源\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        // 这个属性引用了星星预制资源\n        obstaclePrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        // 星星产生后消失时间的随机范围\n        maxStarDuration: 0,\n        minStarDuration: 0,\n        // 地面节点，用于确定星星生成的高度\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        // score label 的引用\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        // 得分音效资源\n        scoreAudio: {\n            default: null,\n            type: cc.AudioClip\n        },\n        bg1: null,\n        bg2: null,\n        // 当前背景\n        curBg: null,\n        gd1: null,\n        gd2: null,\n        // 当前背景\n        curGd: null,\n        // 背景移动速度\n        bgSpeed: 100\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        // this.score = 0;\n        this.player.getComponent('player').game = this\n\n        // 获取地平面的 y 轴坐标\n        this.groundY = this.ground.y + this.ground.height/2;\n        // // 生成一个新的星星\n        // this.spawnNewStar();\n\n\n        // 初始化计时器\n        this.timer = 0;\n        this.starDuration = 0;\n        // 生成一个新的星星\n        this.spawnNewStar();\n        // 初始化计分\n        this.score = 0;\n\n        this.spawnNewObstacle()\n\n\n\n        this.bg1 = this.node.getChildByName('background1');\n        this.bg2 = this.node.getChildByName('background2');\n        this.curBg = this.bg1;\n\n        this.gd1 = this.node.getChildByName('ground1');\n        this.gd2 = this.node.getChildByName('ground2');\n        this.curGd = this.gd1;\n\n\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEndCallback, this, true);\n    },\n\n    start () {\n\n    },\n\n    update (dt) {\n        if (this.timer > this.starDuration) {\n            // this.gameOver();\n            // return;\n        }\n        this.timer += dt;\n\n\n        var s = dt * this.bgSpeed;\n        this.bg1.x -= s;\n        this.bg2.x -= s;\n\n        if (this.curBg.x <= -1360) { // 地图切换\n            if(this.curBg == this.bg2) {\n                this.bg2.x = this.bg1.x + 1360;\n                this.curBg = this.bg1;\n            }\n            else {\n                this.bg1.x = this.bg2.x + 1360;\n                this.curBg = this.bg2;\n            }\n        }\n\n        this.gd1.x -= s;\n        this.gd2.x -= s;\n\n        if (this.curGd.x <= -1360) { // 地图切换\n            if(this.curGd == this.gd2) {\n                this.gd2.x = this.gd1.x + 1360;\n                this.curGd = this.gd1;\n            }\n            else {\n                this.gd1.x = this.gd2.x + 1360;\n                this.curGd = this.gd2;\n            }\n        }\n\n        \n    },\n\n    spawnNewStar: function() {\n        // 使用给定的模板在场景中生成一个新节点\n        var newStar = cc.instantiate(this.starPrefab);\n       \n        // 为星星设置一个随机位置\n        newStar.setPosition(this.getNewStarPosition());\n        newStar.getComponent('star').game = this;\n\n        // 将新增的节点添加到 Canvas 节点下面\n        this.node.addChild(newStar);\n\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n    },\n    getNewStarPosition: function () {\n        var randX = 0;\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n        var randY = this.groundY + Math.random() * this.player.getComponent('player').jumpHeight + 50;\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\n        // var maxX = this.node.width;\n        // randX = (Math.random() - 0.5) * 2 * maxX;\n        randX = this.node.width/2;\n        // 返回星星坐标\n        return cc.v2(randX, randY);\n    },\n    spawnNewObstacle: function() {\n        // 使用给定的模板在场景中生成一个新节点\n        var newObstacle = cc.instantiate(this.obstaclePrefab);\n\n        // 为星星设置一个随机位置\n        newObstacle.setPosition(this.getNewObstaclePosition());\n        newObstacle.getComponent('obstacle').game = this;\n\n        // 将新增的节点添加到 Canvas 节点下面\n        this.node.addChild(newObstacle);\n    },\n    getNewObstaclePosition: function () {\n        var randX = this.node.width/2 ;\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n        var randY = -120;\n        //  this.groundY + Math.random() * this.player.getComponent('player').jumpHeight + 50;\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\n        // var maxX = this.node.width;\n        // randX = (Math.random() - 0.5) * 2 * maxX;\n        // randX = this.node.width/2;\n        // 返回星星坐标\n        return cc.v2(randX, randY);\n    },\n    gainScore: function () {\n        this.score += 1;\n        // 更新 scoreDisplay Label 的文字\n        this.scoreDisplay.string = 'Score: ' + this.score;\n        // 播放得分音效\n        cc.audioEngine.playEffect(this.scoreAudio, false);\n    },\n    gameOver: function () {\n        this.player.stopAllActions(); //停止 player 节点的跳跃动作\n        cc.director.loadScene('game');\n    },\n    onTouchEndCallback: function () {\n        this.player.getComponent('player').setJumpAction()\n    }\n});\n"]}